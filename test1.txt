 public class Customer
    {
        public int Id { get; set; }
        public string Name { get; set; }

        public override bool Equals(object obj)
        {
            return ((Customer)(obj)).Id.Equals(this.Id);
        }
    }
    ----------------------------
      public interface IRepo
    {
        Customer Add(Customer item);
        Customer Remove(int id);
        ICollection<Customer> GetAll();
    }
    -------------------------------------------
    class CustomerRepo : IRepo
    {
        public List<Customer> Customers { get; set; }
        public Customer Add(Customer item)
        {
            foreach (var customer in Customers)
            {
                if (item.Id == customer.Id)
                {
                    return null;
                }
            }
           Customers.Add(item);
            return item;
        }

        public ICollection<Customer> GetAll()
        {
            return Customers;
        }

        public Customer Remove(int id)
        {
            Customer customer = Customers.FirstOrDefault(cust => cust.Id == id);
            int idx = Customers.IndexOf(customer);
            if(idx >-1)
            {
                Customers.RemoveAt(idx);
                return customer;
            }
            return null;
                
        }
    }
    -------------------------------------------------
    public class ManageCustomer
    {
        private readonly IRepo _repo;

        public ManageCustomer(IRepo repo)
        {
            _repo = repo;
        }
        public int GetCustomerID(int num)
        {
            return num + 10;
        }
        public bool AddCustomer(Customer customer)
        {
            var res = _repo.Add(customer);
            if (res == null)
                return false;
            return true;

        }
    }